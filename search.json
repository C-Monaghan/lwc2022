[{"path":"/articles/lwc2022.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"lwc2022: Generating the Langa-Weir classification of cognitive function for the 2022 Health and Retirement Study cognition data","text":"lwc2022 package specifically developed generation Langa-Weir classification cognitive function 2022 Health Retirement Study (HRS) cognition data. classification system, developed researchers David Weir Kenneth Langa, categorizes individuals cognitive function groups based performance set standardized cognitive assessments. previous waves HRS data (1995 - 2020) researcher contributed dataset dementia classifications (Langa, 2020). dataset widely used research study trajectories cognitive aging, dementia risk, related health outcomes older adults. However, recent release 2022 HRS data, classifications yet updated. , lwc2022 package aims bridge gap providing tools allow researchers apply methodology 2022 cognition data.","code":""},{"path":"/articles/lwc2022.html","id":"methodological-overview-of-langa-weir-classifications","dir":"Articles","previous_headings":"","what":"Methodological Overview of Langa-Weir Classifications","title":"lwc2022: Generating the Langa-Weir classification of cognitive function for the 2022 Health and Retirement Study cognition data","text":"Langa-Weir classification cognitive function based performance several cognitive domains, including: Immediate delayed word recall: tests assess episodic memory asking respondents recall list 10 words immediately delay. Serial subtraction: task measures working memory mental flexibility participants subtract 7 100 five times row. Backwards counting: Respondents asked count backwards 20, tests attention working memory. Langa-Weir methodology involves scoring tasks assigning individuals one three cognitive function categories: Normal cognition Cognitively impaired, demented (CIND) Dementia classification based total cognitive score sums performance across tasks. Cut-thresholds used determine category respondent falls , higher scores indicating better cognitive performance.","code":""},{"path":"/articles/lwc2022.html","id":"what-the-lwc2022-package-provides","dir":"Articles","previous_headings":"","what":"What the lwc2022 package provides","title":"lwc2022: Generating the Langa-Weir classification of cognitive function for the 2022 Health and Retirement Study cognition data","text":"package offers several key functions facilitate generation Langa-Weir classifications 2022 HRS data. functions replicate logic methodology described Langa-Weir Data Description earlier waves. following key functions included: Data extraction: extract() function pulls relevant cognitive test variables HRS dataset. Scoring: score() function calculates cognitive test scores word recall, serial subtraction, backwards counting. Classification: classify() function generates cognitive function classifications based total score, assigning individuals normal cognition, CIND, dementia categories.","code":""},{"path":"/articles/lwc2022.html","id":"replicating-the-methodology","dir":"Articles","previous_headings":"What the lwc2022 package provides","what":"Replicating the Methodology","title":"lwc2022: Generating the Langa-Weir classification of cognitive function for the 2022 Health and Retirement Study cognition data","text":"Immediate Delayed Word Recall: Respondents asked recall set words. scoring rules applied lwc2022 mirror prior waves: score 1 given word correctly recalled, total score immediate delayed recall computed. Serial Subtraction: Respondents asked subtract 7 100, continue subtracting 7 resulting number. Points assigned based number correct subtractions, five. score_subtraction() function handles scoring automatically. Backwards Counting: Respondents asked count backwards 20 1. score 2 points given succeed first try, 1 point succeed second attempt, 0 points otherwise. scoring incorporated score() function. Summing Total Cognitive Score: total cognitive score computed summing scores across tests (word recall, serial subtraction, backwards counting). total score used classify individuals cognitive function groups: Normal Cognition: total score 12 higher. Cognitively Impaired, Demented (CIND): score 7 11. Dementia: score 6 lower","code":""},{"path":"/articles/lwc2022.html","id":"example-workflow","dir":"Articles","previous_headings":"","what":"Example Workflow","title":"lwc2022: Generating the Langa-Weir classification of cognitive function for the 2022 Health and Retirement Study cognition data","text":"","code":"# Installing package # devtools::install_github(\"C-Monaghan/lwc2022\")  # Loading package library(lwc2022)  # Load the example dataset data(cog_data)  # Extract the relevant cognitive test variables extracted_data <- extract(cog_data)  # Score the cognitive tests scored_data <- score(extracted_data)  # Classify individuals based on their total cognitive score classified_data <- classify(scored_data)  # View the first few rows of the classified data head(classified_data) #>     HHID PN imrc_imp2022 dlrc_imp2022 ser7_imp2022 bwc20_imp2022 #> 1 288941 93            4            5            0             0 #> 2 234057 99            2            4            2             2 #> 3 224021 72            5            3            0             1 #> 4 785284 26            3            3            0             1 #> 5 326317  7            5            3            0             0 #> 6 465208 42            4            3            0             2 #>   cogtot27_imp2022 cogfunction2022 #> 1                9               2 #> 2               10               2 #> 3                9               2 #> 4                7               2 #> 5                8               2 #> 6                9               2"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Cormac Monaghan. Copyright holder, author, maintainer. Rafael de Andrade Moral. Author. Joanna McHugh Power. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Monaghan C, de Andrade Moral R, McHugh Power J (2024). lwc2022: Langa-Weir Classification Cognitive Function 2022 HRS Data. R package version 0.0.0.9000, https://c-monaghan.github.io/lwc022/, https://github.com/C-Monaghan/lwc2022.","code":"@Manual{,   title = {lwc2022: Langa-Weir Classification of Cognitive Function for 2022 HRS Data},   author = {Cormac Monaghan and Rafael {de Andrade Moral} and Joanna {McHugh Power}},   year = {2024},   note = {R package version 0.0.0.9000, https://c-monaghan.github.io/lwc022/},   url = {https://github.com/C-Monaghan/lwc2022}, }"},{"path":"/index.html","id":"lwc2022","dir":"","previous_headings":"","what":"Langa-Weir Classification of Cognitive Function for 2022 HRS Data","title":"Langa-Weir Classification of Cognitive Function for 2022 HRS Data","text":"lwc2022 package designed generate Langa-Weir classification cognitive function 2022 Health Retirement Study (HRS) cognition data. previous waves HRS data (1995 - 2020) researcher contributed dataset dementia classifications. However, recent release 2022 HRS data, classifications yet updated. , lwc2022 package aims provide tools allow researchers apply classification methodology 2022 cognition data. examine full vignette check : lwc2022","code":""},{"path":"/index.html","id":"installing-the-lwc2022-package","dir":"","previous_headings":"","what":"Installing the lwc2022 package","title":"Langa-Weir Classification of Cognitive Function for 2022 HRS Data","text":"install Github {r} # install.packages(\"devtools\") devtools::install_github(\"C-Monaghan/lwc2022\") Next, load package {r} library(lwc2022)","code":""},{"path":"/reference/classify.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify Cognitive Function Based on Total Scores — classify","title":"Classify Cognitive Function Based on Total Scores — classify","text":"function classifies individuals cognitive function groups based total cognition score, calculated immediate word recall, delayed word recall, serial subtraction, backwards counting scores. classification creates three categories cognitive function.","code":""},{"path":"/reference/classify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify Cognitive Function Based on Total Scores — classify","text":"","code":"classify(data)"},{"path":"/reference/classify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify Cognitive Function Based on Total Scores — classify","text":"data dataframe containing cognitive test scores, including total immediate word recall, delayed word recall, serial subtraction, backwards counting scores.","code":""},{"path":"/reference/classify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify Cognitive Function Based on Total Scores — classify","text":"dataframe : Total_cog_score: Total cognitive score (sum individual task scores). Class: Cognitive function classification (1 = Normal, 2 = Cognitive impairment dementia, 3 = Demented). Renamed columns updated labels 2022 data: imrc_imp2022, dlrc_imp2022, ser7_imp2022, bwc20_imp2022, cogtot27_imp2022, cogfunction2022.","code":""},{"path":"/reference/classify.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Classify Cognitive Function Based on Total Scores — classify","text":"function creates total cognitive score summing scores immediate word recall, delayed word recall, serial subtraction, backwards counting. classifies cognitive function three levels: Class 1: Normal (total score >= 12). Class 2: Cognitive impairment dementia (total score 7 11). Class 3: Demented (total score <= 6).","code":""},{"path":"/reference/classify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classify Cognitive Function Based on Total Scores — classify","text":"","code":"# Assuming `cog_data` is a dataframe with the relevant columns classified_data <- classify(cog_data_score)"},{"path":"/reference/cog_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Cognition Data — cog_data","title":"Cognition Data — cog_data","text":"simulated dataset cognition test scores, following methodology Health Retirement Study (HRS). dataset includes immediate word recall, delayed word recall, serial subtraction, backwards counting tasks, scores representing cognitive performance tests.","code":""},{"path":"/reference/cog_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cognition Data — cog_data","text":"","code":"cog_data"},{"path":"/reference/cog_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cognition Data — cog_data","text":"dataframe 100 rows 19 variables: HHID Household identifier, unique 6-digit integer. PN Person number, unique 1- 2-digit integer within household. SD182M1 Immediate word recall test score first word. SD182M2 Immediate word recall test score second word. SD182M3 Immediate word recall test score third word. SD182M4 Immediate word recall test score fourth word. SD182M5 Immediate word recall test score fifth word. SD183M1 Delayed word recall test score first word. SD183M2 Delayed word recall test score second word. SD183M3 Delayed word recall test score third word. SD183M4 Delayed word recall test score fourth word. SD183M5 Delayed word recall test score fifth word. SD142 Serial subtraction, result subtracting 7 100. SD143 Serial subtraction, result subtracting 7 previous number. SD144 Serial subtraction, result subtracting 7 previous number. SD145 Serial subtraction, result subtracting 7 previous number. SD146 Serial subtraction, result subtracting 7 previous number. SD124 Backwards counting test, success first attempt (1 = success, 0 = fail). SD129 Backwards counting test, success second attempt (1 = success, 0 = fail).","code":""},{"path":"/reference/cog_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cognition Data — cog_data","text":"","code":"# Load the data data(cog_data)  # View the first few rows head(cog_data) #>     HHID PN SD182M1 SD182M2 SD182M3 SD182M4 SD182M5 SD183M1 SD183M2 SD183M3 #> 1 288941 93      17       9      32      33      99      39       5      23 #> 2 234057 99      53      51      38      67      31      31      64      35 #> 3 224021 72      39      10      25      27      16      58      61      40 #> 4 785284 26      63      23      34      25      62      17      25      58 #> 5 326317  7      12      27      29      38      30      64      62      30 #> 6 465208 42      15      99       5      21       6      60      22      12 #>   SD183M4 SD183M5 SD142 SD143 SD144 SD145 SD146 SD124 SD129 #> 1      35      21    95    90    80    72    60     0     0 #> 2      14      37    93    86    73    78    65     1     0 #> 3      29       8    90    94    81    79    69     0     1 #> 4      32      61    95    85    83    74    57     0     1 #> 5       7      10    92    93    88    66    52     0     0 #> 6       3      60    97    86    76    63    53     1     1"},{"path":"/reference/cog_data_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Scored Cognition Data — cog_data_score","title":"Scored Cognition Data — cog_data_score","text":"simulated dataset scored cognition test results. dataset contains calculated total scores immediate recall, delayed recall, serial subtraction.","code":""},{"path":"/reference/cog_data_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scored Cognition Data — cog_data_score","text":"","code":"cog_data_score"},{"path":"/reference/cog_data_score.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Scored Cognition Data — cog_data_score","text":"dataframe 100 rows 6 variables: HHID Household identifier, unique 6-digit integer. PN Person number, unique 1- 2-digit integer within household. Total_I Total immediate word recall score, ranging 0 5 (sum 5 items immediate recall test). Total_D Total delayed word recall score, ranging 0 5 (sum 5 items delayed recall test). Total_Sub Total serial subtraction score, ranging 0 5 (sum successful subtractions serial subtraction test). Total_Count Total backwards counting score, ranging 0 2 (2 points success first try, 1 point success second try, 0 failure).","code":""},{"path":"/reference/cog_data_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scored Cognition Data — cog_data_score","text":"","code":"# Load the data data(cog_data_score)  # View the first few rows head(cog_data_score) #>     HHID PN Total_I Total_D Total_Sub Total_Count #> 1 288941 93       4       5         0           0 #> 2 234057 99       2       4         2           2 #> 3 224021 72       5       3         0           1 #> 4 785284 26       3       3         0           1 #> 5 326317  7       5       3         0           0 #> 6 465208 42       4       3         0           2"},{"path":"/reference/extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Key Cognitive Measures from Dataset — extract","title":"Extract Key Cognitive Measures from Dataset — extract","text":"function extracts specific cognitive measures dataset, including immediate delayed word recall, serial subtraction, backwards counting, along household person identifiers.","code":""},{"path":"/reference/extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Key Cognitive Measures from Dataset — extract","text":"","code":"extract(data)"},{"path":"/reference/extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Key Cognitive Measures from Dataset — extract","text":"data dataframe containing full dataset specific variables selected.","code":""},{"path":"/reference/extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Key Cognitive Measures from Dataset — extract","text":"dataframe following variables: HHID: Household ID. PN: Person number (individual identifier). Immediate delayed word recall variables (columns starting \"SD182M\" \"SD183M\"). Serial subtraction variables (SD142 SD146). Backwards counting variables (SD124, SD129).","code":""},{"path":"/reference/extract.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Key Cognitive Measures from Dataset — extract","text":"function selects key cognitive test results identifiers dataset. uses dplyr::select() retrieve: Immediate delayed word recall variables (starting \"SD182M\" \"SD183M\"). Serial subtraction results (SD142 SD146). Backwards counting variables (SD124, SD129).","code":""},{"path":"/reference/extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Key Cognitive Measures from Dataset — extract","text":"","code":"# Assuming `cog_data` is a dataframe with the relevant columns extract(cog_data) #>      HHID PN SD182M1 SD182M2 SD182M3 SD182M4 SD182M5 SD183M1 SD183M2 SD183M3 #> 1  288941 93      17       9      32      33      99      39       5      23 #> 2  234057 99      53      51      38      67      31      31      64      35 #> 3  224021 72      39      10      25      27      16      58      61      40 #> 4  785284 26      63      23      34      25      62      17      25      58 #> 5  326317  7      12      27      29      38      30      64      62      30 #> 6  465208 42      15      99       5      21       6      60      22      12 #> 7  748794  9      32      63       8      15      53      59      25      31 #> 8  293626 83      52       7      12      51       8      34      32      67 #> 9  669691 36      55      63      13      57      22       4      56      56 #> 10 689448 78       7      27      18      26      22      13      25      30 #>    SD183M4 SD183M5 SD142 SD143 SD144 SD145 SD146 SD124 SD129 #> 1       35      21    95    90    80    72    60     0     0 #> 2       14      37    93    86    73    78    65     1     0 #> 3       29       8    90    94    81    79    69     0     1 #> 4       32      61    95    85    83    74    57     0     1 #> 5        7      10    92    93    88    66    52     0     0 #> 6        3      60    97    86    76    63    53     1     1 #> 7       23      52    92    89    78    60    69     1     1 #> 8       64      54    97    84    76    67    61     0     1 #> 9       96      34    90    85    71    79    66     0     1 #> 10      15      10    96    95    85    75    59     1     1"},{"path":"/reference/score.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Cognitive Test Scores — score","title":"Calculate Cognitive Test Scores — score","text":"function calculates various cognitive test scores dataset, including word recall, serial subtraction, backwards counting. computes total scores immediate delayed word recall, scores serial subtraction tasks, total score backwards counting.","code":""},{"path":"/reference/score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Cognitive Test Scores — score","text":"","code":"score(data)"},{"path":"/reference/score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Cognitive Test Scores — score","text":"data dataframe containing cognitive test data, including columns word recall, serial subtraction, backwards counting tasks.","code":""},{"path":"/reference/score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Cognitive Test Scores — score","text":"dataframe following computed scores: Total_I: Total score immediate word recall. Total_D: Total score delayed word recall. Total_Sub: Total score serial subtraction. Total_Count: Total score backwards counting.","code":""},{"path":"/reference/score.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Cognitive Test Scores — score","text":"function applies scoring functions cognitive test data: Word recall: Scores immediate delayed recall using score_recall function, computes total scores. Serial subtraction: Applies score_subtraction function calculate scores subtraction step, computes total score. Backwards counting: Assigns 2 points correct counting first try, 1 point correct counting second try, 0 incorrect counting.","code":""},{"path":"/reference/score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Cognitive Test Scores — score","text":"","code":"# Assuming `cog_data` is a dataframe with the relevant columns scored_data <- score(cog_data)"},{"path":"/reference/score_recall.html","id":null,"dir":"Reference","previous_headings":"","what":"Score Word Recall Task — score_recall","title":"Score Word Recall Task — score_recall","text":"function scores word recall task respondents given 1 correct recall 0 incorrect recall. Missing values (NA) retained NA output.","code":""},{"path":"/reference/score_recall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score Word Recall Task — score_recall","text":"","code":"score_recall(x)"},{"path":"/reference/score_recall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score Word Recall Task — score_recall","text":"x numeric vector representing respondents' word recall responses. Specific numeric codes used define incorrect responses.","code":""},{"path":"/reference/score_recall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Score Word Recall Task — score_recall","text":"numeric vector : 1: Correct recall. 0: Incorrect recall (based specific codes). NA: original value missing, remains NA.","code":""},{"path":"/reference/score_recall.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Score Word Recall Task — score_recall","text":"function assigns score 1 correct word recall. Incorrect recall determined specific numeric codes (51 67, 96, 98, 99) assigned score 0. NA values input remain NA output.","code":""},{"path":"/reference/score_recall.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Score Word Recall Task — score_recall","text":"","code":"responses <- c(53, 62, 100, NA, 66) score_recall(responses) #> [1]  0  0  1 NA  0"},{"path":"/reference/score_subtraction.html","id":null,"dir":"Reference","previous_headings":"","what":"Score Serial Subtraction Task — score_subtraction","title":"Score Serial Subtraction Task — score_subtraction","text":"function scores serial subtraction task respondents scored based ability successfully subtract specific value (e.g., 7) previous value. score 1 given correct subtraction, score 0 given incorrect subtraction. However, respondent can still receive score 1 recover initial mistake correctly subtracting later.","code":""},{"path":"/reference/score_subtraction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score Serial Subtraction Task — score_subtraction","text":"","code":"score_subtraction(val, diff)"},{"path":"/reference/score_subtraction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score Serial Subtraction Task — score_subtraction","text":"val numeric vector representing respondent's current answer. diff numeric vector representing correct difference (e.g., expected subtraction value).","code":""},{"path":"/reference/score_subtraction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Score Serial Subtraction Task — score_subtraction","text":"numeric vector : 1: Correct subtraction. 0: Incorrect subtraction. NA: original value missing (NA), remains NA.","code":""},{"path":"/reference/score_subtraction.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Score Serial Subtraction Task — score_subtraction","text":"function checks respondent's answer (val) equal correct subtraction difference (diff). , awarded score 1. make mistake, get 0. However, correct mistake next step, can receive score 1 step. Missing values (NA) input remain NA output.","code":""},{"path":"/reference/score_subtraction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Score Serial Subtraction Task — score_subtraction","text":"","code":"responses <- c(93, 86, 79, 72, NA) correct_diffs <- c(93, 86, 79, 72, 65) - 7 score_subtraction(responses, correct_diffs) #> [1]  0  0  0  0 NA"}]
